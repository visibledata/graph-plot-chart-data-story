{
  "hash": "a284694fa96964db29c580214dd8130e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Welcome to the Graph | Plot | Chart | Data Story Brand\"\nauthor: \"Charlotte Hadley\"\ndate: \"2025-05-01\"\ncategories: [news]\nexecute:\n  echo: false\n  warning: false\n  message: false\n---\n\n\n\nAt GPCDS we're purposefully provoking comparisons to things. To evoke the feeling that everything needed to be categorised and factions exist we wanted to design a cohesive colour palette that gels well but also has clear distinctions within it. Let's meet the GPCDS palette, brand idents and the logomarks.\n\n::: aside\n![](gpcds-original-sketches.png)\n\nOur initial sketches for brand elements back in 2023.\n:::\n\n# The colours\n\nThe primary colours of each category were chosen through the excellent interactive tool <https://coolors.co/generate> and then the other colours were generated through experimenting with [https://color.adobe.com/create/color-wheel](color.adobe.com/create/color-wheel). While iterating on the palette we continuously simulated the colours under the most common form of colour blindness - deuteranopia. The chart below shows these 25 colours:\n\n\n\n::: {.cell}\n\n:::\n\n\n\n<center>\n![](gg_gpcds_colour_palette.png)\n</center>\n\nThere are 7 additional colours, primarily designed for web elements but could also be used alongside the visualisation category palettes.\n\n\n\n::: {.cell}\n\n:::\n\n\n\n<center>\n![](gg_ui_colour_palette.png){height=400px}\n</center>\n\nRAG indicators are problematic but very popular. Our palette contains 5 colour-blind safe colours from a red-green palette recommended via [Andy Kirk's Visualising Data](https://visualisingdata.com/2019/08/five-ways-to-design-for-red-green-colour-blindness/) from this [beautiful NPR chart by Alyson Hurt and Katie Park](https://www.npr.org/2016/04/18/474256366/why-americas-schools-have-a-money-problem?t=1565169704516).\n\n\n\n::: {.cell}\n\n:::\n\n\n\n<center>\n![](gg_rag_colour_palette.png)\n</center>\n\n# Category Idents\n\nEach visualisation category has two \"idents\" - a major and minor ident. \n\n| Design Element | Major Ident | Minor Ident |\n| :--- | :--- | :--- |\n| Filled square | Each ident is a 1:1 rectangle filled in the primary colour for the category. | |\n| Disks | Each ident contains four disks, two in the secondary colour and the other two in the tertiary colour from the category | Each ident contains two disks, using the secondary and tertiary colour from the category | \n| Lines | Each ident contains one or more lines using the tertiary darker colour from the category | Each ident *may* contain a line using the teriary darker colour from the category |\n| Text | Each ident contains the number of the category using the Futura font | Minor idents don't contain text | \n\nThese are the properties of the graphical elments:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nident_linewidth <- 5\nident_disk_size <- 25\nident_textsize <- 40\nident_minor_disk_factor <- sqrt(5)\nident_font <- \"Futura\"\n```\n:::\n\n\n\nAs the idents are intended to be displayed in their \"four-wise arrangement\" they were individually designed to make that layout satisfying. There are notes below about how these decisions were made.\n\n<div class=\"grid\" style=\"row-gap: 0;column-gap:0;\">\n  <div class=\"g-col-6\" style='text-align:right;background-color:{{<brand color graph-primary>}}'><img src='gg_graph_ident_major.png' style='max-height:200px'/></div>\n  <div class=\"g-col-6\" style='background-color:{{<brand color plot-primary>}}'><img src='gg_plot_ident_major.png' style='max-height:200px;text-align:right;'/></div>\n\n  <div class=\"g-col-6\" style='text-align:right;background-color:{{<brand color chart-primary>}}'><img src='gg_chart_ident_major.png' style='max-height:200px'/></div>\n  <div class=\"g-col-6\" style='background-color:{{<brand color story-primary>}}'><img src='gg_story_ident_major.png' style='max-height:200px;text-align:right;'/></div>\n</div>\n\nThe **graph idents** are simple graphs. In the major graph the edges are either at 180 or 60 degrees to one another, and the closed triad is placed to draw the reader to the cente of the four-wise arrangement.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ngraph_x_first <- 12.5\ngraph_y_first <- 50\ngraph_y_height <- 30\n\ngraph_line_1_slope <- tan(60 * pi / 180)\ngraph_line_2_slope <- tan(-60 * pi / 180)\n\ngraph_line_1_intercept <- - {50 + graph_line_1_slope * 50}\ngraph_line_2_intercept <- - {50 + graph_line_2_slope * {100-graph_x_first}}\n\ngraph_bottom_disk_x = {graph_line_2_intercept - graph_line_1_intercept} / {graph_line_1_slope - graph_line_2_slope}\n\ngraph_bottom_disk_y = - {graph_line_1_slope * graph_bottom_disk_x + graph_line_1_intercept}\n\ngg_graph_ident_major <- tibble(\n  x = c(graph_x_first, 100 - graph_x_first, 50, graph_bottom_disk_x),\n  y = c(graph_y_first, graph_y_first, graph_y_first, graph_bottom_disk_y),\n  # colour = \"secondary\"\n  colour = c(\"secondary\", \"tertiary\", \"tertiary\", \"secondary\")\n) %>%\n  ggplot() +\n  annotate(\n    \"segment\",\n    x = graph_x_first, \n    xend = 100 - graph_x_first,\n    y = graph_y_first, \n    yend = graph_y_first,\n    linewidth = ident_linewidth,\n    colour = cols_gpcds$graph_tertiary_darker) +\n  annotate(\n    \"segment\",\n    x = c(50, 100 - graph_x_first), \n    xend = c(graph_bottom_disk_x, graph_bottom_disk_x),\n    y = c(graph_y_first, graph_y_first), \n    yend = c(graph_bottom_disk_y, graph_bottom_disk_y),\n    linewidth = ident_linewidth,\n    colour = cols_gpcds$graph_tertiary_darker) +\n  geom_point(aes(x, y, colour = colour),\n           size = ident_disk_size,\n           show.legend = FALSE) +\n  geom_text(\n    x = 50,\n    y = 70,\n    label = \"GRAPH\",\n    size = ident_textsize,\n    colour = \"white\",\n    family = \"Futura\",\n    lineheight = 0.9\n  ) +\n  scale_colour_manual(\n    values = c(\n      \"secondary\" = cols_gpcds$graph_secondary,\n      \"tertiary\" = cols_gpcds$graph_tertiary\n    )\n  ) +\n  scale_x_continuous(expand = c(0, 0)) +\n  scale_y_continuous(expand = c(0, 0)) +\n  coord_fixed(xlim = c(0, 100), ylim = c(0, 100)) +\n  theme_void() +\n  theme(\n    panel.background = element_rect(\n      fill = cols_gpcds$graph_primary,\n      colour = cols_gpcds$graph_primary\n    )\n  )\n\nggsave(quarto_here(\"gg_graph_ident_major.png\"),\n       gg_graph_ident_major,\n       width = 8,\n       height = 8)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ngraph_minor_x_first <- 20\ngraph_y_first <- 50\ngraph_y_height <- 30\n\n\ngg_graph_ident_minor <- tibble(\n  x = c(graph_minor_x_first, 100 - graph_minor_x_first),\n  y = c(graph_y_first, graph_y_first),\n  # colour = \"secondary\"\n  colour = c(\"secondary\", \"tertiary\")\n) %>%\n  ggplot() +\n  annotate(\n    \"segment\",\n    x = graph_minor_x_first, \n    xend = 100 - graph_minor_x_first,\n    y = graph_y_first, \n    yend = graph_y_first,\n    linewidth = ident_linewidth + 2,\n    colour = cols_gpcds$graph_tertiary_darker) +\n  geom_point(aes(x, y, colour = colour),\n           size = ident_disk_size * ident_minor_disk_factor,\n           show.legend = FALSE) +\n  scale_colour_manual(\n    values = c(\n      \"secondary\" = cols_gpcds$graph_secondary,\n      \"tertiary\" = cols_gpcds$graph_tertiary\n    )\n  ) +\n  scale_x_continuous(expand = c(0, 0)) +\n  scale_y_continuous(expand = c(0, 0)) +\n  coord_fixed(xlim = c(0, 100), ylim = c(0, 100)) +\n  theme_void() +\n  theme(\n    panel.background = element_rect(\n      fill = cols_gpcds$graph_primary,\n      colour = cols_gpcds$graph_primary\n    )\n  )\n\nggsave(quarto_here(\"gg_graph_ident_minor.png\"),\n       gg_graph_ident_minor,\n       width = 8,\n       height = 8)\n```\n:::\n\n\n\n::: {layout-ncol=2}\n![](gg_graph_ident_major.png){width=50%}\n\n![](gg_graph_ident_minor.png){width=50%}\n:::\n\nThe **plot idents** are inspired by scatter plots. In the major ident the disks are placed on the line `y = -x` to enclose the idents in the four-wise arrangement. The word \"plot\" is displayed in the top-right corner as that's the placement of the ident in the four-wise arrangement.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ngg_plot_ident_major <- tibble(\n  x = c(12.5, 37.5, 62.5, 87.5),\n  y = rev(c(12.5, 37.5, 62.5, 87.5)),\n  colour = c(\"tertiary\", \"tertiary\", \"secondary\", \"secondary\")\n) %>% \nggplot() +\n  geom_point(aes(x, y, colour = colour),\n             size = ident_disk_size,\n             show.legend = FALSE) +\n  geom_text(\n    x = 75,\n    y = 62.5,\n            label = \"PLOT\",\n            size = ident_textsize,\n            colour = \"white\",\n            family = \"Futura\") +\n  geom_vline(xintercept = 50,\n             colour = cols_gpcds$plot_tertiary_darker,\n             linewidth = ident_linewidth) +\n  geom_hline(yintercept = 50,\n             colour = cols_gpcds$plot_tertiary_darker,\n             linewidth = ident_linewidth) +\n  scale_colour_manual(values = c(\"secondary\" = cols_gpcds$plot_secondary,\n                               \"tertiary\" = cols_gpcds$plot_tertiary)) +\n  scale_x_continuous(expand = c(0, 0)) +\n  scale_y_continuous(expand = c(0, 0)) +\n  coord_fixed(xlim = c(0, 100),\n              ylim = c(0, 100)) +\n  theme_void() +\n  theme(panel.background = element_rect(fill = cols_gpcds$plot_primary,\n                                        colour = cols_gpcds$plot_primary))\n\nggsave(quarto_here(\"gg_plot_ident_major.png\"),\n       gg_plot_ident_major,\n       width = 8,\n       height = 8)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ngg_plot_ident_minor <- tibble(\n  x = c(30, 70),\n  y = rev(c(30, 70)),\n  colour = c(\"tertiary\", \"secondary\")\n) %>% \nggplot() +\n  geom_point(aes(x, y, colour = colour),\n             size = ident_disk_size * ident_minor_disk_factor,\n             show.legend = FALSE) +\n  scale_colour_manual(values = c(\"secondary\" = cols_gpcds$plot_secondary,\n                               \"tertiary\" = cols_gpcds$plot_tertiary)) +\n  scale_x_continuous(expand = c(0, 0)) +\n  scale_y_continuous(expand = c(0, 0)) +\n  coord_fixed(xlim = c(0, 100),\n              ylim = c(0, 100)) +\n  theme_void() +\n  theme(panel.background = element_rect(fill = cols_gpcds$plot_primary,\n                                        colour = cols_gpcds$plot_primary))\n\nggsave(quarto_here(\"gg_plot_ident_minor.png\"),\n       gg_plot_ident_minor,\n       width = 8,\n       height = 8)\n```\n:::\n\n\n\n::: {layout-ncol=2}\n![](gg_plot_ident_major.png){width=50%}\n\n![](gg_plot_ident_minor.png){width=50%}\n:::\n\nThe **chart idents** are inspired by bubble charts, but could also be interpeted as something more complex. In the major ident all four of the smaller disks are placed on the lines `y = ± x` with the top-right disk placed off the \"bubble\" to bring the viewer's gaze to the centre of the four-wise arrangement. \n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(\"ggforce\")\nchart_center_circle_coords <- list(x = 50, y = 50)\nchart_center_circle_radius <- 37.5\n\n# Solve (x - 50)² + (y - 50)² = 37.5² and y = x\nchart_equ_solution <- 50 - 75 / {2 * sqrt(2)}\n\ngg_chart_ident_major <- tibble(\n  x = c(chart_equ_solution, 100-chart_equ_solution, 100 - 12.5, chart_equ_solution),\n  y = c(100-chart_equ_solution, chart_equ_solution, 100 - 12.5, chart_equ_solution),\n  colour = c(\"tertiary\", \"tertiary\", \"secondary\", \"secondary\")\n) %>%\n  ggplot() +\n  geom_circle(data = tibble(),\n              aes(x0 = 50, y0 = 50, r = chart_center_circle_radius),\n                linewidth = ident_linewidth,\n                colour = cols_gpcds$chart_tertiary_darker) +\n    geom_point(aes(x, y, colour = colour),\n             size = ident_disk_size,\n             show.legend = FALSE) +\n  geom_text(\n    x = 50,\n    y = 50,\n    label = \"CHART\",\n    size = ident_textsize,\n    colour = \"white\",\n    family = \"Futura\"\n  ) +\n  scale_colour_manual(\n    values = c(\n      \"secondary\" = cols_gpcds$chart_secondary,\n      \"tertiary\" = cols_gpcds$chart_tertiary\n    )\n  ) +\n  scale_x_continuous(expand = c(0, 0)) +\n  scale_y_continuous(expand = c(0, 0)) +\n  coord_fixed(xlim = c(0, 100), ylim = c(0, 100)) +\n  theme_void() +\n  theme(\n    panel.background = element_rect(\n      fill = cols_gpcds$chart_primary,\n      colour = cols_gpcds$chart_primary\n    )\n  )\n\nggsave(quarto_here(\"gg_chart_ident_major.png\"),\n       gg_chart_ident_major,\n       width = 8,\n       height = 8)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nchart_minor_center_circle_radius <- 37.5\n\n# Solve (x - 50)² + (y - 50)² = 37.5² and y = x\nchart_equ_solution <- 50 - 75 / {2 * sqrt(2)}\n\ngg_chart_ident_minor <- tibble(\n  x = 100 - chart_equ_solution,\n  y = 100 - chart_equ_solution,\n  colour = \"secondary\"\n) %>%\n  ggplot() +\n\n    geom_circle(aes(x0 = 50, y0 = 50, r = chart_minor_center_circle_radius),\n                linewidth = ident_linewidth,\n                colour = cols_gpcds$chart_tertiary_darker,\n                fill = cols_gpcds$chart_tertiary_darker) +\n    geom_point(aes(x, y, colour = colour),\n             size = ident_disk_size * ident_minor_disk_factor,\n             show.legend = FALSE) +\n  scale_colour_manual(\n    values = c(\n      \"secondary\" = cols_gpcds$chart_secondary,\n      \"tertiary\" = cols_gpcds$chart_tertiary\n    )\n  ) +\n  scale_x_continuous(expand = c(0, 0)) +\n  scale_y_continuous(expand = c(0, 0)) +\n  coord_fixed(xlim = c(0, 100), ylim = c(0, 100)) +\n  theme_void() +\n  theme(\n    panel.background = element_rect(\n      fill = cols_gpcds$chart_primary,\n      colour = cols_gpcds$chart_primary\n    )\n  )\n\nggsave(quarto_here(\"gg_chart_ident_minor.png\"),\n       gg_chart_ident_minor,\n       width = 8,\n       height = 8)\n```\n:::\n\n\n\n::: {layout-ncol=2}\n![](gg_chart_ident_major.png){width=50%}\n\n![](gg_chart_ident_minor.png){width=50%}\n:::\n\nThe **data story idents** are designed to imply movement and include arrows which are not found in any other ident. In the major ident the arrows point to the centre of the ident itself instead of a position within the four-wise arrangement - to indicate that the story sometimes need to be centered over design.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nstory_x_coords <- list(min = 15, max = 15 *3)\nstory_y_coords <- 20\nstory_arrow_y_adjustment <- 7.5\nstory_arrow_x_adjustment <- 2.5\n\ngg_story_ident_major <- tibble(\n  x = c(story_x_coords$min, story_x_coords$max, 100 - story_x_coords$min, 100 - story_x_coords$max),\n  y = c(100 - story_y_coords, 100 - story_y_coords, story_y_coords, story_y_coords),\n  colour = c(\"secondary\", \"tertiary\", \"secondary\", \"tertiary\")\n) %>%\n  ggplot() +\n    geom_point(aes(x, y, colour = colour),\n             size = ident_disk_size,\n             show.legend = FALSE) +\n  annotate(\"curve\",\n           x = story_x_coords$min + story_arrow_x_adjustment,\n           y = 100 - story_y_coords + story_arrow_y_adjustment,\n           xend = story_x_coords$max - story_arrow_x_adjustment,\n           yend = 100 - story_y_coords + story_arrow_y_adjustment,\n           linewidth = ident_linewidth - 2,\n           colour = cols_gpcds$story_tertiary_darker,\n           arrow = arrow(length = unit(0.6, \"cm\"), type = \"closed\"),\n           curvature = -0.5,\n           ncp = 1000) +\n  annotate(\"curve\",\n           x = 100 - story_x_coords$min - story_arrow_x_adjustment,\n           y = story_y_coords - story_arrow_y_adjustment,\n           xend = 100 - story_x_coords$max + story_arrow_x_adjustment,\n           yend = story_y_coords - story_arrow_y_adjustment,\n           linewidth = ident_linewidth - 2,\n           colour = cols_gpcds$story_tertiary_darker,\n           arrow = arrow(length = unit(0.6, \"cm\"), type = \"closed\"),\n           curvature = -0.5,\n           ncp = 1000) +\n  geom_text(\n    x = 50,\n    y = 50,\n    label = \"DATA\\nSTORY\",\n    size = ident_textsize,\n    colour = \"white\",\n    family = \"Futura\",\n    lineheight = 0.9\n  ) +\n  scale_colour_manual(\n    values = c(\n      \"secondary\" = cols_gpcds$story_secondary,\n      \"tertiary\" = cols_gpcds$story_tertiary\n    )\n  ) +\n  scale_x_continuous(expand = c(0, 0)) +\n  scale_y_continuous(expand = c(0, 0)) +\n  coord_fixed(xlim = c(0, 100), ylim = c(0, 100)) +\n  theme_void() +\n  theme(\n    panel.background = element_rect(\n      fill = cols_gpcds$story_primary,\n      colour = cols_gpcds$story_primary\n    )\n  )\n\nggsave(quarto_here(\"gg_story_ident_major.png\"),\n       gg_story_ident_major,\n       width = 8,\n       height = 8)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nstory_minor_x_coords <- list(min = 25, max = 75)\nstory_minor_y_coords <- 20\nstory_arrow_y_adjustment <- 15\nstory_arrow_x_adjustment <- 2.5\n\ngg_story_ident_minor <- tibble(\n  x = as.numeric(story_minor_x_coords),\n  y = c(50, 50),\n  colour = c(\"secondary\", \"tertiary\")\n) %>%\n  ggplot() +\n    geom_point(aes(x, y, colour = colour),\n             size = ident_disk_size * ident_minor_disk_factor,\n             show.legend = FALSE) +\n  annotate(\"curve\",\n           x = story_minor_x_coords$min + story_arrow_x_adjustment,\n           y = 50 + story_arrow_y_adjustment,\n           xend = story_minor_x_coords$max - story_arrow_x_adjustment,\n           yend = 50 + story_arrow_y_adjustment,\n           linewidth = ident_linewidth,\n           colour = cols_gpcds$story_tertiary_darker,\n           arrow = arrow(length = unit(0.6, \"cm\"), type = \"closed\"),\n           curvature = -0.5,\n           ncp = 1000) +\n  annotate(\"curve\",\n           x = 100 - story_minor_x_coords$min - story_arrow_x_adjustment,\n           y = 50 - story_arrow_y_adjustment,\n           xend = 100 - story_minor_x_coords$max + story_arrow_x_adjustment,\n           yend = 50 - story_arrow_y_adjustment,\n           linewidth = ident_linewidth,\n           colour = cols_gpcds$story_tertiary_darker,\n           arrow = arrow(length = unit(0.6, \"cm\"), type = \"closed\"),\n           curvature = -0.5,\n           ncp = 1000) +\n  scale_colour_manual(\n    values = c(\n      \"secondary\" = cols_gpcds$story_secondary,\n      \"tertiary\" = cols_gpcds$story_tertiary\n    )\n  ) +\n  scale_x_continuous(expand = c(0, 0)) +\n  scale_y_continuous(expand = c(0, 0)) +\n  coord_fixed(xlim = c(0, 100), ylim = c(0, 100)) +\n  theme_void() +\n  theme(\n    panel.background = element_rect(\n      fill = cols_gpcds$story_primary,\n      colour = cols_gpcds$story_primary\n    )\n  )\n\nggsave(quarto_here(\"gg_story_ident_minor.png\"),\n       gg_story_ident_minor,\n       width = 8,\n       height = 8)\n```\n:::\n\n\n\n::: {layout-ncol=2}\n![](gg_story_ident_major.png){width=50%}\n\n![](gg_story_ident_minor.png){width=50%}\n:::\n\n# Logomarks\n\nThe logomark is constructed from slightly modified versions of the minor idents - the script for generating the logomarks [can be found on GitHub](https://github.com/visibledata/graph-plot-chart-data-story/blob/master/brand-identity/logomarks.R). There are three different versions of the design:\n\n::: {layout-ncol=3}\n\n![](../../brand-identity/logomark_colour.png)\n\n![](../../brand-identity/logomark_black_on_white.png)\n\n![](../../brand-identity/logomark_white_on_black.png)\n:::\n\nThere are two cricisms of the first generation logomarks:\n\n- In the colour logomark the arrows in the story section do not have a lineend on the non-arrow size. This is a limitation of the curve geom.\n\n- There are slight inconsistencies in the linewidth of some elements due to how they're calculated in {ggplot2}. In an ideal world all lines would have the same width. \n\n# Lettermark\n\nOur combination mark was designed before the lettermark in Canva:\n\n![](../../brand-identity/lettermark_canva.png)\n\nWe've tried to replicate the lettermark directly here with HTML and CSS but unfortunately cannot get the `font-weight` to affect the letters:\n\n::: {style='font-family:Futura;font-size:100px;text-align:center;font-weight:100'}\n<span style='color:{{<brand color graph-primary>}};'>G</span><span style='color:{{<brand color black-mid>}};'>|</span><span style='color:{{<brand color plot-primary>}};'>P</span><span style='color:{{<brand color black-mid>}};'>|</span><span style='color:{{<brand color chart-primary>}};'>C</span><span style='color:{{<brand color black-mid>}};'>|</span><span style='color:{{<brand color story-primary>}};'>DS</span>\n:::\n\n# Combination Marks\n\nThe combination marks were constructed in Canva for simplicity. To provide some *meaning* to how the lettermark and logomark relate to one another the height of the pipe character has been set to 150px and the logomark is 2 * ϕ * 150px\n\nThe 1:1 and 4:3 ratio combination marks are crops of the same image with a vertical alignment, whereas the 16:9 combination mark is horizontally arranged:\n\n::: {layout-ncol=2}\n\n![](../../brand-identity/combination-mark_16-9.png)\n\n![](../../brand-identity/combination-mark_compare-4-3-and-1-1.png)\n\n:::\n\n\n# Favicon\n\nFavicons are miniture versions of the logo used for website icon etc, the logomark has been simplified to rectangles coloured with the primary colour of each visualisation category.\n\n![](../../brand-identity/favicon_144x144.png)\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}