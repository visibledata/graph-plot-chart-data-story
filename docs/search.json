[
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Blog",
    "section": "",
    "text": "You’ll find all of our blogposts and featured articles here.\n\nBlog\n\n\n\n\n\n\n\n\n\n\nPodcast Episode 1: [Surprise Guest]\n\n\n\n\n\n\npodcast\n\n\nexpert\n\n\n\n\n\n\n\n\n\nJun 1, 2025\n\n\nCharlotte Hadley\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome to the Graph | Plot | Chart | Data Story Brand\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nMay 1, 2025\n\n\nCharlotte Hadley\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "interactivity-and-dashboards.html#edges-from-grouped-data",
    "href": "interactivity-and-dashboards.html#edges-from-grouped-data",
    "title": "Interactivity and Dashboards",
    "section": "Edges from grouped data",
    "text": "Edges from grouped data\nAs an example let’s look at the Freedom of Information tidytuesday dataset.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nfair_use_cases &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-08-29/fair_use_cases.csv')\n\nRows: 251 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): case, court, jurisdiction, categories, outcome\ndbl (1): year\nlgl (1): fair_use_found\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nfair_use_findings &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-08-29/fair_use_findings.csv')\n\nRows: 251 Columns: 9\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (9): title, case_number, year, court, key_facts, issue, holding, tags, o...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ncase_categories &lt;- fair_use_cases %&gt;% \n  separate_longer_delim(categories,\n                        delim = \";\") %&gt;% \n  mutate(categories = str_trim(categories),\n         categories = str_to_sentence(categories)) %&gt;% \n  select(case, categories) %&gt;% \n  mutate(n_category = n(),\n         .by = categories) %&gt;% \n  filter(n_category &gt;= 10)\n\ncase_categories\n\n# A tibble: 516 × 3\n   case                                                    categories n_category\n   &lt;chr&gt;                                                   &lt;chr&gt;           &lt;int&gt;\n 1 De Fontbrune v. Wofsy, 39 F.4th 1214 (9th Cir. 2022)    Education…         56\n 2 De Fontbrune v. Wofsy, 39 F.4th 1214 (9th Cir. 2022)    Photograph         56\n 3 Sedlik v. Von Drachenberg, No. CV 21-1102 (C.D. Cal. M… Painting/…         31\n 4 Sedlik v. Von Drachenberg, No. CV 21-1102 (C.D. Cal. M… Photograph         56\n 5 Sketchworks Indus. Strength Comedy, Inc. v. Jacobs, No… Film/audi…         59\n 6 Sketchworks Indus. Strength Comedy, Inc. v. Jacobs, No… Music              25\n 7 Sketchworks Indus. Strength Comedy, Inc. v. Jacobs, No… Parody/sa…         33\n 8 Sketchworks Indus. Strength Comedy, Inc. v. Jacobs, No… Review/co…         41\n 9 Am. Soc'y for Testing & Materials v. Public.Resource.O… Education…         56\n10 Am. Soc'y for Testing & Materials v. Public.Resource.O… Textual w…         93\n# ℹ 506 more rows\n\n\nI want to create a graph where the nodes are categories of case and edges indicate that the categories appear together in a case. To start with we need nodes with IDs:\n\nnodes_categories &lt;- case_categories %&gt;% \n  distinct(categories) %&gt;% \n  arrange(categories) %&gt;% \n  mutate(id = row_number()) %&gt;% \n  select(id, name = categories)\n\nnodes_categories\n\n# A tibble: 13 × 2\n      id name                          \n   &lt;int&gt; &lt;chr&gt;                         \n 1     1 Computer program              \n 2     2 Education/scholarship/research\n 3     3 Film/audiovisual              \n 4     4 Format shifting/space shifting\n 5     5 Internet/digitization         \n 6     6 Music                         \n 7     7 News reporting                \n 8     8 Painting/drawing/graphic      \n 9     9 Parody/satire                 \n10    10 Photograph                    \n11    11 Review/commentary             \n12    12 Textual work                  \n13    13 Unpublished                   \n\n\nTo begin creating the edges let’s replace the category names with their node IDs:\n\ncategories_to_cases &lt;- case_categories %&gt;% \n  left_join(nodes_categories,\n            by = c(\"categories\" = \"name\")) %&gt;% \n  select(case, id)\n\ncategories_to_cases\n\n# A tibble: 516 × 2\n   case                                                                       id\n   &lt;chr&gt;                                                                   &lt;int&gt;\n 1 De Fontbrune v. Wofsy, 39 F.4th 1214 (9th Cir. 2022)                        2\n 2 De Fontbrune v. Wofsy, 39 F.4th 1214 (9th Cir. 2022)                       10\n 3 Sedlik v. Von Drachenberg, No. CV 21-1102 (C.D. Cal. May 31, 2022)          8\n 4 Sedlik v. Von Drachenberg, No. CV 21-1102 (C.D. Cal. May 31, 2022)         10\n 5 Sketchworks Indus. Strength Comedy, Inc. v. Jacobs, No. 19-CV-7470-LTS…     3\n 6 Sketchworks Indus. Strength Comedy, Inc. v. Jacobs, No. 19-CV-7470-LTS…     6\n 7 Sketchworks Indus. Strength Comedy, Inc. v. Jacobs, No. 19-CV-7470-LTS…     9\n 8 Sketchworks Indus. Strength Comedy, Inc. v. Jacobs, No. 19-CV-7470-LTS…    11\n 9 Am. Soc'y for Testing & Materials v. Public.Resource.Org, Inc., No. 13…     2\n10 Am. Soc'y for Testing & Materials v. Public.Resource.Org, Inc., No. 13…    12\n# ℹ 506 more rows\n\n\nNow we can inner_join() this object with itself to create all the shared categories. The filter(id.x != id.y) line removes all “loops” from the graph - ie categories connected with themselves.\n\nedges_categories &lt;- categories_to_cases %&gt;% \n  inner_join(categories_to_cases, by = \"case\") %&gt;%\n  filter(id.x != id.y) %&gt;% \n  select(from = id.x,\n         to = id.y,\n         case)\n\nWarning in inner_join(., categories_to_cases, by = \"case\"): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 1 of `x` matches multiple rows in `y`.\nℹ Row 1 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\nedges_categories\n\n# A tibble: 818 × 3\n    from    to case                                                             \n   &lt;int&gt; &lt;int&gt; &lt;chr&gt;                                                            \n 1     2    10 De Fontbrune v. Wofsy, 39 F.4th 1214 (9th Cir. 2022)             \n 2    10     2 De Fontbrune v. Wofsy, 39 F.4th 1214 (9th Cir. 2022)             \n 3     8    10 Sedlik v. Von Drachenberg, No. CV 21-1102 (C.D. Cal. May 31, 202…\n 4    10     8 Sedlik v. Von Drachenberg, No. CV 21-1102 (C.D. Cal. May 31, 202…\n 5     3     6 Sketchworks Indus. Strength Comedy, Inc. v. Jacobs, No. 19-CV-74…\n 6     3     9 Sketchworks Indus. Strength Comedy, Inc. v. Jacobs, No. 19-CV-74…\n 7     3    11 Sketchworks Indus. Strength Comedy, Inc. v. Jacobs, No. 19-CV-74…\n 8     6     3 Sketchworks Indus. Strength Comedy, Inc. v. Jacobs, No. 19-CV-74…\n 9     6     9 Sketchworks Indus. Strength Comedy, Inc. v. Jacobs, No. 19-CV-74…\n10     6    11 Sketchworks Indus. Strength Comedy, Inc. v. Jacobs, No. 19-CV-74…\n# ℹ 808 more rows\n\n\nThis list of edges contains duplicates, that’s important when proceeding to create a graph.\n\nCreating a function\n\ncase_categories\n\n# A tibble: 516 × 3\n   case                                                    categories n_category\n   &lt;chr&gt;                                                   &lt;chr&gt;           &lt;int&gt;\n 1 De Fontbrune v. Wofsy, 39 F.4th 1214 (9th Cir. 2022)    Education…         56\n 2 De Fontbrune v. Wofsy, 39 F.4th 1214 (9th Cir. 2022)    Photograph         56\n 3 Sedlik v. Von Drachenberg, No. CV 21-1102 (C.D. Cal. M… Painting/…         31\n 4 Sedlik v. Von Drachenberg, No. CV 21-1102 (C.D. Cal. M… Photograph         56\n 5 Sketchworks Indus. Strength Comedy, Inc. v. Jacobs, No… Film/audi…         59\n 6 Sketchworks Indus. Strength Comedy, Inc. v. Jacobs, No… Music              25\n 7 Sketchworks Indus. Strength Comedy, Inc. v. Jacobs, No… Parody/sa…         33\n 8 Sketchworks Indus. Strength Comedy, Inc. v. Jacobs, No… Review/co…         41\n 9 Am. Soc'y for Testing & Materials v. Public.Resource.O… Education…         56\n10 Am. Soc'y for Testing & Materials v. Public.Resource.O… Textual w…         93\n# ℹ 506 more rows\n\nmake_nodes_from_grouped &lt;- function(data_by_group,\n                                    node_name_col){\n  \n  data_by_group %&gt;% \n  distinct({{node_name_col}}) %&gt;% \n  arrange({{node_name_col}}) %&gt;% \n  mutate(id = row_number()) %&gt;% \n  select(id, name = {{node_name_col}})\n  \n}\n\nnodes_from_fn &lt;- case_categories %&gt;% \n  make_nodes_from_grouped(categories)\n\n\nmake_edges_from_grouped &lt;- function(data_by_group,\n                                    data_nodes,\n                                    grouping_col,\n                                    node_name_col){\n  \n  # node_name_col_chr &lt;- rlang::as_label(node_name_col)\n  # \n  # print(node_name_col_chr)\n  # \n\n  grouped_by_nodes &lt;- data_by_group %&gt;%\n  left_join(data_nodes,\n            by = setNames(\"name\", rlang::as_name(rlang::enquo(node_name_col)))) \n  \n  grouped_by_nodes %&gt;% \n  inner_join(grouped_by_nodes, by = rlang::as_name(rlang::enquo(grouping_col))) %&gt;%\n  filter(id.x != id.y) %&gt;% \n  select(from = id.x,\n         to = id.y,\n         {{grouping_col}})\n\nedges_categories\n  \n}\n\ncase_categories %&gt;% \n  make_edges_from_grouped(nodes_from_fn,\n                          grouping_col = case,\n                          node_name_col = categories)\n\nWarning in inner_join(., grouped_by_nodes, by = rlang::as_name(rlang::enquo(grouping_col))): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 1 of `x` matches multiple rows in `y`.\nℹ Row 1 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n\n# A tibble: 818 × 3\n    from    to case                                                             \n   &lt;int&gt; &lt;int&gt; &lt;chr&gt;                                                            \n 1     2    10 De Fontbrune v. Wofsy, 39 F.4th 1214 (9th Cir. 2022)             \n 2    10     2 De Fontbrune v. Wofsy, 39 F.4th 1214 (9th Cir. 2022)             \n 3     8    10 Sedlik v. Von Drachenberg, No. CV 21-1102 (C.D. Cal. May 31, 202…\n 4    10     8 Sedlik v. Von Drachenberg, No. CV 21-1102 (C.D. Cal. May 31, 202…\n 5     3     6 Sketchworks Indus. Strength Comedy, Inc. v. Jacobs, No. 19-CV-74…\n 6     3     9 Sketchworks Indus. Strength Comedy, Inc. v. Jacobs, No. 19-CV-74…\n 7     3    11 Sketchworks Indus. Strength Comedy, Inc. v. Jacobs, No. 19-CV-74…\n 8     6     3 Sketchworks Indus. Strength Comedy, Inc. v. Jacobs, No. 19-CV-74…\n 9     6     9 Sketchworks Indus. Strength Comedy, Inc. v. Jacobs, No. 19-CV-74…\n10     6    11 Sketchworks Indus. Strength Comedy, Inc. v. Jacobs, No. 19-CV-74…\n# ℹ 808 more rows"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "podcast.html",
    "href": "podcast.html",
    "title": "Podcast",
    "section": "",
    "text": "Our podcast will launch Q4 2025.\n\n\n\n\n\n\n\n\nPodcast Episode 1: [Surprise Guest]\n\n\n\npodcast\n\n\nexpert\n\n\n\n\n\n\n\nCharlotte Hadley\n\n\nJun 1, 2025\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/2025-05-01/index.html",
    "href": "posts/2025-05-01/index.html",
    "title": "Welcome to the Graph | Plot | Chart | Data Story Brand",
    "section": "",
    "text": "At GPCDS we’re purposefully provoking comparisons to things. To evoke the feeling that everything needed to be categorised and factions exist we wanted to design a cohesive colour palette that gels well but also has clear distinctions within it. Let’s meet the GPCDS palette, brand idents and the logomarks.\n\n\n\nOur initial sketches for brand elements back in 2023.\n\nThe colours\nThe primary colours of each category were chosen through the excellent interactive tool https://coolors.co/generate and then the other colours were generated through experimenting with https://color.adobe.com/create/color-wheel. While iterating on the palette we continuously simulated the colours under the most common form of colour blindness - deuteranopia. The chart below shows these 25 colours:\n\n\n\nThere are 7 additional colours, primarily designed for web elements but could also be used alongside the visualisation category palettes.\n\n\n\nRAG indicators are problematic but very popular. Our palette contains 5 colour-blind safe colours from a red-green palette recommended via Andy Kirk’s Visualising Data from this beautiful NPR chart by Alyson Hurt and Katie Park.\n\n\n\n\n\nCategory Idents\nEach visualisation category has two “idents” - a major and minor ident.\n\n\n\n\n\n\n\n\nDesign Element\nMajor Ident\nMinor Ident\n\n\n\n\nFilled square\nEach ident is a 1:1 rectangle filled in the primary colour for the category.\n\n\n\nDisks\nEach ident contains four disks, two in the secondary colour and the other two in the tertiary colour from the category\nEach ident contains two disks, using the secondary and tertiary colour from the category\n\n\nLines\nEach ident contains one or more lines using the tertiary darker colour from the category\nEach ident may contain a line using the teriary darker colour from the category\n\n\nText\nEach ident contains the number of the category using the Futura font\nMinor idents don’t contain text\n\n\n\nThese are the properties of the graphical elments:\n\nident_linewidth &lt;- 5\nident_disk_size &lt;- 25\nident_textsize &lt;- 40\nident_minor_disk_factor &lt;- sqrt(5)\nident_font &lt;- \"Futura\"\n\nAs the idents are intended to be displayed in their “four-wise arrangement” they were individually designed to make that layout satisfying. There are notes below about how these decisions were made.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe graph idents are simple graphs. In the major graph the edges are either at 180 or 60 degrees to one another, and the closed triad is placed to draw the reader to the cente of the four-wise arrangement.\n\n\nCode\ngraph_x_first &lt;- 12.5\ngraph_y_first &lt;- 50\ngraph_y_height &lt;- 30\n\ngraph_line_1_slope &lt;- tan(60 * pi / 180)\ngraph_line_2_slope &lt;- tan(-60 * pi / 180)\n\ngraph_line_1_intercept &lt;- - {50 + graph_line_1_slope * 50}\ngraph_line_2_intercept &lt;- - {50 + graph_line_2_slope * {100-graph_x_first}}\n\ngraph_bottom_disk_x = {graph_line_2_intercept - graph_line_1_intercept} / {graph_line_1_slope - graph_line_2_slope}\n\ngraph_bottom_disk_y = - {graph_line_1_slope * graph_bottom_disk_x + graph_line_1_intercept}\n\ngg_graph_ident_major &lt;- tibble(\n  x = c(graph_x_first, 100 - graph_x_first, 50, graph_bottom_disk_x),\n  y = c(graph_y_first, graph_y_first, graph_y_first, graph_bottom_disk_y),\n  # colour = \"secondary\"\n  colour = c(\"secondary\", \"tertiary\", \"tertiary\", \"secondary\")\n) %&gt;%\n  ggplot() +\n  annotate(\n    \"segment\",\n    x = graph_x_first, \n    xend = 100 - graph_x_first,\n    y = graph_y_first, \n    yend = graph_y_first,\n    linewidth = ident_linewidth,\n    colour = cols_gpcds$graph_tertiary_darker) +\n  annotate(\n    \"segment\",\n    x = c(50, 100 - graph_x_first), \n    xend = c(graph_bottom_disk_x, graph_bottom_disk_x),\n    y = c(graph_y_first, graph_y_first), \n    yend = c(graph_bottom_disk_y, graph_bottom_disk_y),\n    linewidth = ident_linewidth,\n    colour = cols_gpcds$graph_tertiary_darker) +\n  geom_point(aes(x, y, colour = colour),\n           size = ident_disk_size,\n           show.legend = FALSE) +\n  geom_text(\n    x = 50,\n    y = 70,\n    label = \"GRAPH\",\n    size = ident_textsize,\n    colour = \"white\",\n    family = \"Futura\",\n    lineheight = 0.9\n  ) +\n  scale_colour_manual(\n    values = c(\n      \"secondary\" = cols_gpcds$graph_secondary,\n      \"tertiary\" = cols_gpcds$graph_tertiary\n    )\n  ) +\n  scale_x_continuous(expand = c(0, 0)) +\n  scale_y_continuous(expand = c(0, 0)) +\n  coord_fixed(xlim = c(0, 100), ylim = c(0, 100)) +\n  theme_void() +\n  theme(\n    panel.background = element_rect(\n      fill = cols_gpcds$graph_primary,\n      colour = cols_gpcds$graph_primary\n    )\n  )\n\nggsave(quarto_here(\"gg_graph_ident_major.png\"),\n       gg_graph_ident_major,\n       width = 8,\n       height = 8)\n\n\n\n\nCode\ngraph_minor_x_first &lt;- 20\ngraph_y_first &lt;- 50\ngraph_y_height &lt;- 30\n\n\ngg_graph_ident_minor &lt;- tibble(\n  x = c(graph_minor_x_first, 100 - graph_minor_x_first),\n  y = c(graph_y_first, graph_y_first),\n  # colour = \"secondary\"\n  colour = c(\"secondary\", \"tertiary\")\n) %&gt;%\n  ggplot() +\n  annotate(\n    \"segment\",\n    x = graph_minor_x_first, \n    xend = 100 - graph_minor_x_first,\n    y = graph_y_first, \n    yend = graph_y_first,\n    linewidth = ident_linewidth + 2,\n    colour = cols_gpcds$graph_tertiary_darker) +\n  geom_point(aes(x, y, colour = colour),\n           size = ident_disk_size * ident_minor_disk_factor,\n           show.legend = FALSE) +\n  scale_colour_manual(\n    values = c(\n      \"secondary\" = cols_gpcds$graph_secondary,\n      \"tertiary\" = cols_gpcds$graph_tertiary\n    )\n  ) +\n  scale_x_continuous(expand = c(0, 0)) +\n  scale_y_continuous(expand = c(0, 0)) +\n  coord_fixed(xlim = c(0, 100), ylim = c(0, 100)) +\n  theme_void() +\n  theme(\n    panel.background = element_rect(\n      fill = cols_gpcds$graph_primary,\n      colour = cols_gpcds$graph_primary\n    )\n  )\n\nggsave(quarto_here(\"gg_graph_ident_minor.png\"),\n       gg_graph_ident_minor,\n       width = 8,\n       height = 8)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe plot idents are inspired by scatter plots. In the major ident the disks are placed on the line y = -x to enclose the idents in the four-wise arrangement. The word “plot” is displayed in the top-right corner as that’s the placement of the ident in the four-wise arrangement.\n\n\nCode\ngg_plot_ident_major &lt;- tibble(\n  x = c(12.5, 37.5, 62.5, 87.5),\n  y = rev(c(12.5, 37.5, 62.5, 87.5)),\n  colour = c(\"tertiary\", \"tertiary\", \"secondary\", \"secondary\")\n) %&gt;% \nggplot() +\n  geom_point(aes(x, y, colour = colour),\n             size = ident_disk_size,\n             show.legend = FALSE) +\n  geom_text(\n    x = 75,\n    y = 62.5,\n            label = \"PLOT\",\n            size = ident_textsize,\n            colour = \"white\",\n            family = \"Futura\") +\n  geom_vline(xintercept = 50,\n             colour = cols_gpcds$plot_tertiary_darker,\n             linewidth = ident_linewidth) +\n  geom_hline(yintercept = 50,\n             colour = cols_gpcds$plot_tertiary_darker,\n             linewidth = ident_linewidth) +\n  scale_colour_manual(values = c(\"secondary\" = cols_gpcds$plot_secondary,\n                               \"tertiary\" = cols_gpcds$plot_tertiary)) +\n  scale_x_continuous(expand = c(0, 0)) +\n  scale_y_continuous(expand = c(0, 0)) +\n  coord_fixed(xlim = c(0, 100),\n              ylim = c(0, 100)) +\n  theme_void() +\n  theme(panel.background = element_rect(fill = cols_gpcds$plot_primary,\n                                        colour = cols_gpcds$plot_primary))\n\nggsave(quarto_here(\"gg_plot_ident_major.png\"),\n       gg_plot_ident_major,\n       width = 8,\n       height = 8)\n\n\n\n\nCode\ngg_plot_ident_minor &lt;- tibble(\n  x = c(30, 70),\n  y = rev(c(30, 70)),\n  colour = c(\"tertiary\", \"secondary\")\n) %&gt;% \nggplot() +\n  geom_point(aes(x, y, colour = colour),\n             size = ident_disk_size * ident_minor_disk_factor,\n             show.legend = FALSE) +\n  scale_colour_manual(values = c(\"secondary\" = cols_gpcds$plot_secondary,\n                               \"tertiary\" = cols_gpcds$plot_tertiary)) +\n  scale_x_continuous(expand = c(0, 0)) +\n  scale_y_continuous(expand = c(0, 0)) +\n  coord_fixed(xlim = c(0, 100),\n              ylim = c(0, 100)) +\n  theme_void() +\n  theme(panel.background = element_rect(fill = cols_gpcds$plot_primary,\n                                        colour = cols_gpcds$plot_primary))\n\nggsave(quarto_here(\"gg_plot_ident_minor.png\"),\n       gg_plot_ident_minor,\n       width = 8,\n       height = 8)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe chart idents are inspired by bubble charts, but could also be interpeted as something more complex. In the major ident all four of the smaller disks are placed on the lines y = ± x with the top-right disk placed off the “bubble” to bring the viewer’s gaze to the centre of the four-wise arrangement.\n\n\nCode\nlibrary(\"ggforce\")\nchart_center_circle_coords &lt;- list(x = 50, y = 50)\nchart_center_circle_radius &lt;- 37.5\n\n# Solve (x - 50)² + (y - 50)² = 37.5² and y = x\nchart_equ_solution &lt;- 50 - 75 / {2 * sqrt(2)}\n\ngg_chart_ident_major &lt;- tibble(\n  x = c(chart_equ_solution, 100-chart_equ_solution, 100 - 12.5, chart_equ_solution),\n  y = c(100-chart_equ_solution, chart_equ_solution, 100 - 12.5, chart_equ_solution),\n  colour = c(\"tertiary\", \"tertiary\", \"secondary\", \"secondary\")\n) %&gt;%\n  ggplot() +\n  geom_circle(data = tibble(),\n              aes(x0 = 50, y0 = 50, r = chart_center_circle_radius),\n                linewidth = ident_linewidth,\n                colour = cols_gpcds$chart_tertiary_darker) +\n    geom_point(aes(x, y, colour = colour),\n             size = ident_disk_size,\n             show.legend = FALSE) +\n  geom_text(\n    x = 50,\n    y = 50,\n    label = \"CHART\",\n    size = ident_textsize,\n    colour = \"white\",\n    family = \"Futura\"\n  ) +\n  scale_colour_manual(\n    values = c(\n      \"secondary\" = cols_gpcds$chart_secondary,\n      \"tertiary\" = cols_gpcds$chart_tertiary\n    )\n  ) +\n  scale_x_continuous(expand = c(0, 0)) +\n  scale_y_continuous(expand = c(0, 0)) +\n  coord_fixed(xlim = c(0, 100), ylim = c(0, 100)) +\n  theme_void() +\n  theme(\n    panel.background = element_rect(\n      fill = cols_gpcds$chart_primary,\n      colour = cols_gpcds$chart_primary\n    )\n  )\n\nggsave(quarto_here(\"gg_chart_ident_major.png\"),\n       gg_chart_ident_major,\n       width = 8,\n       height = 8)\n\n\n\n\nCode\nchart_minor_center_circle_radius &lt;- 37.5\n\n# Solve (x - 50)² + (y - 50)² = 37.5² and y = x\nchart_equ_solution &lt;- 50 - 75 / {2 * sqrt(2)}\n\ngg_chart_ident_minor &lt;- tibble(\n  x = 100 - chart_equ_solution,\n  y = 100 - chart_equ_solution,\n  colour = \"secondary\"\n) %&gt;%\n  ggplot() +\n\n    geom_circle(aes(x0 = 50, y0 = 50, r = chart_minor_center_circle_radius),\n                linewidth = ident_linewidth,\n                colour = cols_gpcds$chart_tertiary_darker,\n                fill = cols_gpcds$chart_tertiary_darker) +\n    geom_point(aes(x, y, colour = colour),\n             size = ident_disk_size * ident_minor_disk_factor,\n             show.legend = FALSE) +\n  scale_colour_manual(\n    values = c(\n      \"secondary\" = cols_gpcds$chart_secondary,\n      \"tertiary\" = cols_gpcds$chart_tertiary\n    )\n  ) +\n  scale_x_continuous(expand = c(0, 0)) +\n  scale_y_continuous(expand = c(0, 0)) +\n  coord_fixed(xlim = c(0, 100), ylim = c(0, 100)) +\n  theme_void() +\n  theme(\n    panel.background = element_rect(\n      fill = cols_gpcds$chart_primary,\n      colour = cols_gpcds$chart_primary\n    )\n  )\n\nggsave(quarto_here(\"gg_chart_ident_minor.png\"),\n       gg_chart_ident_minor,\n       width = 8,\n       height = 8)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe data story idents are designed to imply movement and include arrows which are not found in any other ident. In the major ident the arrows point to the centre of the ident itself instead of a position within the four-wise arrangement - to indicate that the story sometimes need to be centered over design.\n\n\nCode\nstory_x_coords &lt;- list(min = 15, max = 15 *3)\nstory_y_coords &lt;- 20\nstory_arrow_y_adjustment &lt;- 7.5\nstory_arrow_x_adjustment &lt;- 2.5\n\ngg_story_ident_major &lt;- tibble(\n  x = c(story_x_coords$min, story_x_coords$max, 100 - story_x_coords$min, 100 - story_x_coords$max),\n  y = c(100 - story_y_coords, 100 - story_y_coords, story_y_coords, story_y_coords),\n  colour = c(\"secondary\", \"tertiary\", \"secondary\", \"tertiary\")\n) %&gt;%\n  ggplot() +\n    geom_point(aes(x, y, colour = colour),\n             size = ident_disk_size,\n             show.legend = FALSE) +\n  annotate(\"curve\",\n           x = story_x_coords$min + story_arrow_x_adjustment,\n           y = 100 - story_y_coords + story_arrow_y_adjustment,\n           xend = story_x_coords$max - story_arrow_x_adjustment,\n           yend = 100 - story_y_coords + story_arrow_y_adjustment,\n           linewidth = ident_linewidth - 2,\n           colour = cols_gpcds$story_tertiary_darker,\n           arrow = arrow(length = unit(0.6, \"cm\"), type = \"closed\"),\n           curvature = -0.5,\n           ncp = 1000) +\n  annotate(\"curve\",\n           x = 100 - story_x_coords$min - story_arrow_x_adjustment,\n           y = story_y_coords - story_arrow_y_adjustment,\n           xend = 100 - story_x_coords$max + story_arrow_x_adjustment,\n           yend = story_y_coords - story_arrow_y_adjustment,\n           linewidth = ident_linewidth - 2,\n           colour = cols_gpcds$story_tertiary_darker,\n           arrow = arrow(length = unit(0.6, \"cm\"), type = \"closed\"),\n           curvature = -0.5,\n           ncp = 1000) +\n  geom_text(\n    x = 50,\n    y = 50,\n    label = \"DATA\\nSTORY\",\n    size = ident_textsize,\n    colour = \"white\",\n    family = \"Futura\",\n    lineheight = 0.9\n  ) +\n  scale_colour_manual(\n    values = c(\n      \"secondary\" = cols_gpcds$story_secondary,\n      \"tertiary\" = cols_gpcds$story_tertiary\n    )\n  ) +\n  scale_x_continuous(expand = c(0, 0)) +\n  scale_y_continuous(expand = c(0, 0)) +\n  coord_fixed(xlim = c(0, 100), ylim = c(0, 100)) +\n  theme_void() +\n  theme(\n    panel.background = element_rect(\n      fill = cols_gpcds$story_primary,\n      colour = cols_gpcds$story_primary\n    )\n  )\n\nggsave(quarto_here(\"gg_story_ident_major.png\"),\n       gg_story_ident_major,\n       width = 8,\n       height = 8)\n\n\n\n\nCode\nstory_minor_x_coords &lt;- list(min = 25, max = 75)\nstory_minor_y_coords &lt;- 20\nstory_arrow_y_adjustment &lt;- 15\nstory_arrow_x_adjustment &lt;- 2.5\n\ngg_story_ident_minor &lt;- tibble(\n  x = as.numeric(story_minor_x_coords),\n  y = c(50, 50),\n  colour = c(\"secondary\", \"tertiary\")\n) %&gt;%\n  ggplot() +\n    geom_point(aes(x, y, colour = colour),\n             size = ident_disk_size * ident_minor_disk_factor,\n             show.legend = FALSE) +\n  annotate(\"curve\",\n           x = story_minor_x_coords$min + story_arrow_x_adjustment,\n           y = 50 + story_arrow_y_adjustment,\n           xend = story_minor_x_coords$max - story_arrow_x_adjustment,\n           yend = 50 + story_arrow_y_adjustment,\n           linewidth = ident_linewidth,\n           colour = cols_gpcds$story_tertiary_darker,\n           arrow = arrow(length = unit(0.6, \"cm\"), type = \"closed\"),\n           curvature = -0.5,\n           ncp = 1000) +\n  annotate(\"curve\",\n           x = 100 - story_minor_x_coords$min - story_arrow_x_adjustment,\n           y = 50 - story_arrow_y_adjustment,\n           xend = 100 - story_minor_x_coords$max + story_arrow_x_adjustment,\n           yend = 50 - story_arrow_y_adjustment,\n           linewidth = ident_linewidth,\n           colour = cols_gpcds$story_tertiary_darker,\n           arrow = arrow(length = unit(0.6, \"cm\"), type = \"closed\"),\n           curvature = -0.5,\n           ncp = 1000) +\n  scale_colour_manual(\n    values = c(\n      \"secondary\" = cols_gpcds$story_secondary,\n      \"tertiary\" = cols_gpcds$story_tertiary\n    )\n  ) +\n  scale_x_continuous(expand = c(0, 0)) +\n  scale_y_continuous(expand = c(0, 0)) +\n  coord_fixed(xlim = c(0, 100), ylim = c(0, 100)) +\n  theme_void() +\n  theme(\n    panel.background = element_rect(\n      fill = cols_gpcds$story_primary,\n      colour = cols_gpcds$story_primary\n    )\n  )\n\nggsave(quarto_here(\"gg_story_ident_minor.png\"),\n       gg_story_ident_minor,\n       width = 8,\n       height = 8)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLogomarks\nThe logomark is constructed from slightly modified versions of the minor idents - the script for generating the logomarks can be found on GitHub. There are three different versions of the design:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThere are two cricisms of the first generation logomarks:\n\nIn the colour logomark the arrows in the story section do not have a lineend on the non-arrow size. This is a limitation of the curve geom.\nThere are slight inconsistencies in the linewidth of some elements due to how they’re calculated in {ggplot2}. In an ideal world all lines would have the same width.\n\n\n\nLettermark\nOur combination mark was designed before the lettermark in Canva:\n\nWe’ve tried to replicate the lettermark directly here with HTML and CSS but unfortunately cannot get the font-weight to affect the letters:\n\nG|P|C|DS\n\n\n\nCombination Marks\nThe combination marks were constructed in Canva for simplicity. To provide some meaning to how the lettermark and logomark relate to one another the height of the pipe character has been set to 150px and the logomark is 2 * ϕ * 150px\nThe 1:1 and 4:3 ratio combination marks are crops of the same image with a vertical alignment, whereas the 16:9 combination mark is horizontally arranged:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFavicon\nFavicons are miniture versions of the logo used for website icon etc, the logomark has been simplified to rectangles coloured with the primary colour of each visualisation category."
  },
  {
    "objectID": "posts/2025-06-01/index.html",
    "href": "posts/2025-06-01/index.html",
    "title": "Podcast Episode 1: [Surprise Guest]",
    "section": "",
    "text": "It’ll be a surprise"
  },
  {
    "objectID": "workshops_overview.html",
    "href": "workshops_overview.html",
    "title": "Workshops",
    "section": "",
    "text": "We have two types of workshop."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Graph | Plot | Chart | Data Story",
    "section": "",
    "text": "Data visualisation is too big for one category \n\n\n We use the sometimes confusing, overlapping and personal opinion laced topics about graphically representing data as an opportunity to explore, educate… and have some fun! \n\n\n\n\n\n\n\nWorkshops\n\n\n\n\n\nCoaching & Consulting\n\n\n\n\n\nArticles\n\n\n\n\n\nPodcast\n\n\n\n\n\n\n We’re soft launching at the moment with lots more coming in Q4 2024…"
  },
  {
    "objectID": "graph.html#edges-from-grouped-data",
    "href": "graph.html#edges-from-grouped-data",
    "title": "Graph",
    "section": "Edges from grouped data",
    "text": "Edges from grouped data\nAs an example let’s look at the Freedom of Information tidytuesday dataset.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nfair_use_cases &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-08-29/fair_use_cases.csv')\n\nRows: 251 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): case, court, jurisdiction, categories, outcome\ndbl (1): year\nlgl (1): fair_use_found\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nfair_use_findings &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-08-29/fair_use_findings.csv')\n\nRows: 251 Columns: 9\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (9): title, case_number, year, court, key_facts, issue, holding, tags, o...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ncase_categories &lt;- fair_use_cases %&gt;% \n  separate_longer_delim(categories,\n                        delim = \";\") %&gt;% \n  mutate(categories = str_trim(categories),\n         categories = str_to_sentence(categories)) %&gt;% \n  select(case, categories) %&gt;% \n  mutate(n_category = n(),\n         .by = categories) %&gt;% \n  filter(n_category &gt;= 10)\n\ncase_categories\n\n# A tibble: 516 × 3\n   case                                                    categories n_category\n   &lt;chr&gt;                                                   &lt;chr&gt;           &lt;int&gt;\n 1 De Fontbrune v. Wofsy, 39 F.4th 1214 (9th Cir. 2022)    Education…         56\n 2 De Fontbrune v. Wofsy, 39 F.4th 1214 (9th Cir. 2022)    Photograph         56\n 3 Sedlik v. Von Drachenberg, No. CV 21-1102 (C.D. Cal. M… Painting/…         31\n 4 Sedlik v. Von Drachenberg, No. CV 21-1102 (C.D. Cal. M… Photograph         56\n 5 Sketchworks Indus. Strength Comedy, Inc. v. Jacobs, No… Film/audi…         59\n 6 Sketchworks Indus. Strength Comedy, Inc. v. Jacobs, No… Music              25\n 7 Sketchworks Indus. Strength Comedy, Inc. v. Jacobs, No… Parody/sa…         33\n 8 Sketchworks Indus. Strength Comedy, Inc. v. Jacobs, No… Review/co…         41\n 9 Am. Soc'y for Testing & Materials v. Public.Resource.O… Education…         56\n10 Am. Soc'y for Testing & Materials v. Public.Resource.O… Textual w…         93\n# ℹ 506 more rows\n\n\nI want to create a graph where the nodes are categories of case and edges indicate that the categories appear together in a case. To start with we need nodes with IDs:\n\nnodes_categories &lt;- case_categories %&gt;% \n  distinct(categories) %&gt;% \n  arrange(categories) %&gt;% \n  mutate(id = row_number()) %&gt;% \n  select(id, name = categories)\n\nnodes_categories\n\n# A tibble: 13 × 2\n      id name                          \n   &lt;int&gt; &lt;chr&gt;                         \n 1     1 Computer program              \n 2     2 Education/scholarship/research\n 3     3 Film/audiovisual              \n 4     4 Format shifting/space shifting\n 5     5 Internet/digitization         \n 6     6 Music                         \n 7     7 News reporting                \n 8     8 Painting/drawing/graphic      \n 9     9 Parody/satire                 \n10    10 Photograph                    \n11    11 Review/commentary             \n12    12 Textual work                  \n13    13 Unpublished                   \n\n\nTo begin creating the edges let’s replace the category names with their node IDs:\n\ncategories_to_cases &lt;- case_categories %&gt;% \n  left_join(nodes_categories,\n            by = c(\"categories\" = \"name\")) %&gt;% \n  select(case, id)\n\ncategories_to_cases\n\n# A tibble: 516 × 2\n   case                                                                       id\n   &lt;chr&gt;                                                                   &lt;int&gt;\n 1 De Fontbrune v. Wofsy, 39 F.4th 1214 (9th Cir. 2022)                        2\n 2 De Fontbrune v. Wofsy, 39 F.4th 1214 (9th Cir. 2022)                       10\n 3 Sedlik v. Von Drachenberg, No. CV 21-1102 (C.D. Cal. May 31, 2022)          8\n 4 Sedlik v. Von Drachenberg, No. CV 21-1102 (C.D. Cal. May 31, 2022)         10\n 5 Sketchworks Indus. Strength Comedy, Inc. v. Jacobs, No. 19-CV-7470-LTS…     3\n 6 Sketchworks Indus. Strength Comedy, Inc. v. Jacobs, No. 19-CV-7470-LTS…     6\n 7 Sketchworks Indus. Strength Comedy, Inc. v. Jacobs, No. 19-CV-7470-LTS…     9\n 8 Sketchworks Indus. Strength Comedy, Inc. v. Jacobs, No. 19-CV-7470-LTS…    11\n 9 Am. Soc'y for Testing & Materials v. Public.Resource.Org, Inc., No. 13…     2\n10 Am. Soc'y for Testing & Materials v. Public.Resource.Org, Inc., No. 13…    12\n# ℹ 506 more rows\n\n\nNow we can inner_join() this object with itself to create all the shared categories. The filter(id.x != id.y) line removes all “loops” from the graph - ie categories connected with themselves.\n\nedges_categories &lt;- categories_to_cases %&gt;% \n  inner_join(categories_to_cases, by = \"case\") %&gt;%\n  filter(id.x != id.y) %&gt;% \n  select(from = id.x,\n         to = id.y,\n         case)\n\nWarning in inner_join(., categories_to_cases, by = \"case\"): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 1 of `x` matches multiple rows in `y`.\nℹ Row 1 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\nedges_categories\n\n# A tibble: 818 × 3\n    from    to case                                                             \n   &lt;int&gt; &lt;int&gt; &lt;chr&gt;                                                            \n 1     2    10 De Fontbrune v. Wofsy, 39 F.4th 1214 (9th Cir. 2022)             \n 2    10     2 De Fontbrune v. Wofsy, 39 F.4th 1214 (9th Cir. 2022)             \n 3     8    10 Sedlik v. Von Drachenberg, No. CV 21-1102 (C.D. Cal. May 31, 202…\n 4    10     8 Sedlik v. Von Drachenberg, No. CV 21-1102 (C.D. Cal. May 31, 202…\n 5     3     6 Sketchworks Indus. Strength Comedy, Inc. v. Jacobs, No. 19-CV-74…\n 6     3     9 Sketchworks Indus. Strength Comedy, Inc. v. Jacobs, No. 19-CV-74…\n 7     3    11 Sketchworks Indus. Strength Comedy, Inc. v. Jacobs, No. 19-CV-74…\n 8     6     3 Sketchworks Indus. Strength Comedy, Inc. v. Jacobs, No. 19-CV-74…\n 9     6     9 Sketchworks Indus. Strength Comedy, Inc. v. Jacobs, No. 19-CV-74…\n10     6    11 Sketchworks Indus. Strength Comedy, Inc. v. Jacobs, No. 19-CV-74…\n# ℹ 808 more rows\n\n\nThis list of edges contains duplicates, that’s important when proceeding to create a graph.\n\nCreating a function\n\ncase_categories\n\n# A tibble: 516 × 3\n   case                                                    categories n_category\n   &lt;chr&gt;                                                   &lt;chr&gt;           &lt;int&gt;\n 1 De Fontbrune v. Wofsy, 39 F.4th 1214 (9th Cir. 2022)    Education…         56\n 2 De Fontbrune v. Wofsy, 39 F.4th 1214 (9th Cir. 2022)    Photograph         56\n 3 Sedlik v. Von Drachenberg, No. CV 21-1102 (C.D. Cal. M… Painting/…         31\n 4 Sedlik v. Von Drachenberg, No. CV 21-1102 (C.D. Cal. M… Photograph         56\n 5 Sketchworks Indus. Strength Comedy, Inc. v. Jacobs, No… Film/audi…         59\n 6 Sketchworks Indus. Strength Comedy, Inc. v. Jacobs, No… Music              25\n 7 Sketchworks Indus. Strength Comedy, Inc. v. Jacobs, No… Parody/sa…         33\n 8 Sketchworks Indus. Strength Comedy, Inc. v. Jacobs, No… Review/co…         41\n 9 Am. Soc'y for Testing & Materials v. Public.Resource.O… Education…         56\n10 Am. Soc'y for Testing & Materials v. Public.Resource.O… Textual w…         93\n# ℹ 506 more rows\n\nmake_nodes_from_grouped &lt;- function(data_by_group,\n                                    node_name_col){\n  \n  data_by_group %&gt;% \n  distinct({{node_name_col}}) %&gt;% \n  arrange({{node_name_col}}) %&gt;% \n  mutate(id = row_number()) %&gt;% \n  select(id, name = {{node_name_col}})\n  \n}\n\nnodes_from_fn &lt;- case_categories %&gt;% \n  make_nodes_from_grouped(categories)\n\n\nmake_edges_from_grouped &lt;- function(data_by_group,\n                                    data_nodes,\n                                    grouping_col,\n                                    node_name_col){\n  \n  # node_name_col_chr &lt;- rlang::as_label(node_name_col)\n  # \n  # print(node_name_col_chr)\n  # \n\n  grouped_by_nodes &lt;- data_by_group %&gt;%\n  left_join(data_nodes,\n            by = setNames(\"name\", rlang::as_name(rlang::enquo(node_name_col)))) \n  \n  grouped_by_nodes %&gt;% \n  inner_join(grouped_by_nodes, by = rlang::as_name(rlang::enquo(grouping_col))) %&gt;%\n  filter(id.x != id.y) %&gt;% \n  select(from = id.x,\n         to = id.y,\n         {{grouping_col}})\n\nedges_categories\n  \n}\n\ncase_categories %&gt;% \n  make_edges_from_grouped(nodes_from_fn,\n                          grouping_col = case,\n                          node_name_col = categories)\n\nWarning in inner_join(., grouped_by_nodes, by = rlang::as_name(rlang::enquo(grouping_col))): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 1 of `x` matches multiple rows in `y`.\nℹ Row 1 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n\n# A tibble: 818 × 3\n    from    to case                                                             \n   &lt;int&gt; &lt;int&gt; &lt;chr&gt;                                                            \n 1     2    10 De Fontbrune v. Wofsy, 39 F.4th 1214 (9th Cir. 2022)             \n 2    10     2 De Fontbrune v. Wofsy, 39 F.4th 1214 (9th Cir. 2022)             \n 3     8    10 Sedlik v. Von Drachenberg, No. CV 21-1102 (C.D. Cal. May 31, 202…\n 4    10     8 Sedlik v. Von Drachenberg, No. CV 21-1102 (C.D. Cal. May 31, 202…\n 5     3     6 Sketchworks Indus. Strength Comedy, Inc. v. Jacobs, No. 19-CV-74…\n 6     3     9 Sketchworks Indus. Strength Comedy, Inc. v. Jacobs, No. 19-CV-74…\n 7     3    11 Sketchworks Indus. Strength Comedy, Inc. v. Jacobs, No. 19-CV-74…\n 8     6     3 Sketchworks Indus. Strength Comedy, Inc. v. Jacobs, No. 19-CV-74…\n 9     6     9 Sketchworks Indus. Strength Comedy, Inc. v. Jacobs, No. 19-CV-74…\n10     6    11 Sketchworks Indus. Strength Comedy, Inc. v. Jacobs, No. 19-CV-74…\n# ℹ 808 more rows"
  }
]